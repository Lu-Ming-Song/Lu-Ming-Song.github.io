<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿明的博客</title>
  
  <subtitle>Try a little harder to be a little better</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://songluming.com/"/>
  <updated>2018-12-14T08:57:38.207Z</updated>
  <id>http://songluming.com/</id>
  
  <author>
    <name>青花猪的忧伤</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ERROR 1045(28000):Access denied for user &#39;0DBC&#39; @&#39; localhost&#39;(using password:NO)</title>
    <link href="http://songluming.com/18858/"/>
    <id>http://songluming.com/18858/</id>
    <published>2018-12-14T08:57:38.000Z</published>
    <updated>2018-12-14T08:57:38.207Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>启动问题</title>
    <link href="http://songluming.com/31206/"/>
    <id>http://songluming.com/31206/</id>
    <published>2018-12-12T10:06:16.718Z</published>
    <updated>2018-12-14T05:48:20.144Z</updated>
    
    <content type="html"><![CDATA[<ol><li>在安装mysql的文件目录中找到配置文件my.ini,然后打开<br>/images/1.png</li><li>打开后，搜索mysqld关键字,找到后，在mysqld下面添加skip-grant-tables，保存退出</li><li>开始按钮+R，打开运行对话框，输入”services.msc”，打开服务窗口</li><li>重启MySQL服务</li><li>然后运行cmd，输入:mysql -u root -p    ,出现password：直接回车即可。</li><li>进入mysql数据库：mysql&gt; use mysql;Database changed</li><li>给root用户设置新密码：mysql&gt; update user set password=password(“123456”) where user=”root”;</li><li>刷新数据库mysql&gt; flush privileges;<br>提示：Query OK, 0 rows affected (0.01 sec)</li><li>退出mysql：mysql&gt; exit<br>提示：Bye</li><li>最后重新修改my.ini这个文件,把刚才加入的”skip-grant-tables”这行删除,保存退出再重启mysql服务就可以了。</li></ol><hr><p>date: 2018-12-12 18:06:16</p><h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;在安装mysql的文件目录中找到配置文件my.ini,然后打开&lt;br&gt;/images/1.png&lt;/li&gt;
&lt;li&gt;打开后，搜索mysqld关键字,找到后，在mysqld下面添加skip-grant-tables，保存退出&lt;/li&gt;
&lt;li&gt;开始按钮+R，打开运
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>giehub绑定新的远程仓库</title>
    <link href="http://songluming.com/16129/"/>
    <id>http://songluming.com/16129/</id>
    <published>2018-10-17T11:18:44.746Z</published>
    <updated>2018-10-17T11:35:34.643Z</updated>
    
    <content type="html"><![CDATA[<p>（一个本地对多个远程仓库）：<br>在你需要上传的当前文件夹中打开Bash<br>1.git init<br>2.git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Lu-Ming-Song/C.git<br>3.git add .<br>4.git commit -m “ 命名 “<br>5.git push -u origin master（如果报错：error: failed to push some refs to <a href="mailto:&#39;git@github.com" target="_blank" rel="noopener">&#39;git@github.com</a>:Lu-Ming-Song/C.git’）<br>（原因：出现错误的主要原因是github中的README.md文件不在本地代码目录中）<br>请输入：git pull –rebase origin master（下载README.md文件）<br>6.git push -u origin master</p><hr><p>date: 2018-10-17 19:18:44</p><h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;（一个本地对多个远程仓库）：&lt;br&gt;在你需要上传的当前文件夹中打开Bash&lt;br&gt;1.git init&lt;br&gt;2.git remote add origin &lt;a href=&quot;mailto:git@github.com&quot; target=&quot;_blank&quot; rel=&quot;noope
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PIL添加一个像素序列到图像</title>
    <link href="http://songluming.com/25646/"/>
    <id>http://songluming.com/25646/</id>
    <published>2018-09-25T14:44:22.044Z</published>
    <updated>2018-09-25T14:48:33.019Z</updated>
    
    <content type="html"><![CDATA[<p>from PIL import Image</p><p>img = Image.open(“图片路径”)<br>img = img.convert(“L”)  #灰度化<br>img.show()</p><p>imgdata = list(img.getdata())<br>print(imgdata)</p><p>addlist = []<br>for i in range(len(imgdata)):<br>    if imgdata[i]&gt;250:<br>        addlist.append(imgdata[i]-100)<br>    else:<br>        addlist.append(imgdata[i])</p><p>img.putdata(addlist)<br>img.show()</p><hr><p>date: 2018-09-25 22:44:22</p><h2 id="tags-python"><a href="#tags-python" class="headerlink" title="tags: python"></a>tags: python</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;from PIL import Image&lt;/p&gt;
&lt;p&gt;img = Image.open(“图片路径”)&lt;br&gt;img = img.convert(“L”)  #灰度化&lt;br&gt;img.show()&lt;/p&gt;
&lt;p&gt;imgdata = list(img.getdata())&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python遍历文件夹的.xls文件并合并</title>
    <link href="http://songluming.com/7210/"/>
    <id>http://songluming.com/7210/</id>
    <published>2018-09-25T13:26:04.271Z</published>
    <updated>2018-09-25T14:23:06.854Z</updated>
    
    <content type="html"><![CDATA[<p>这是小编做的一款处理数据集方法，仅供参考<br>话不多说，直接上源码：<br>import os<br>import pandas as pd<br>df = pd.DataFrame(columns=[‘流水号’,’事件名称’,’本方户名’,’对方户名’,’流水时间’,’操作员’,’交易额’,’流水标志’,’扇区号’])<br>l = []<br>def search(path):<br>    parents = os.listdir(path)  # 返回指定路径下所有文件和文件夹的名字，并存放于一个列表中<br>    sum = 0<br>    for parent in parents:<br>        child = os.path.join(path,parent) # 将多个路径组合后返回<br>        if os.path.isdir(child):<br>            search(child)         # 遍历文件名<br>        elif os.path.isfile(child):<br>            if os.path.splitext(child)[1] == ‘.xls’:<br>                d = pd.read_excel(child)<br>                l.append(d)<br>search(r’C:\Users\aming\Desktop\大学生行为分析\后勤数据’)<br>df = pd.concat(l)<br>df.to_excel(‘result.xlsx’,index=False) # 保存到result文件里</p><hr><p>date: 2018-09-25 21:26:04</p><h2 id="tags-python"><a href="#tags-python" class="headerlink" title="tags: python"></a>tags: python</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是小编做的一款处理数据集方法，仅供参考&lt;br&gt;话不多说，直接上源码：&lt;br&gt;import os&lt;br&gt;import pandas as pd&lt;br&gt;df = pd.DataFrame(columns=[‘流水号’,’事件名称’,’本方户名’,’对方户名’,’流水时间’,’
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>将域名与github绑定</title>
    <link href="http://songluming.com/55776/"/>
    <id>http://songluming.com/55776/</id>
    <published>2018-09-20T14:27:42.704Z</published>
    <updated>2018-09-21T11:39:09.193Z</updated>
    
    <content type="html"><![CDATA[<p>一：向你的 Github Pages 仓库添加一个CNAME(一定要<em>大写</em>)文件<br>其中只能包含一个顶级域名，像这样：<a href="http://songluming.com">http://songluming.com</a></p><p>如果你是用 hexo 框架搭建博客并部署到 Github Pages 上，每次<br>   hexo g<br>   hexo d<br> 后会把把你的博客所在目录下 public 文件夹里的东西都推到 Github Pages 仓库上，这样将把CNAME文件覆盖掉，<br>所以建议将CNAME文件添加到source文件夹里，这样每次pull就不用担心CNAME文件被覆盖。<br>二：向你的 DNS 配置中添加 3 条记录</p><p>@          A             192.30.252.153<br>@          A             192.30.252.154<br>www      CNAME           username.github.io.</p><p>用你自己的 Github 用户名替换 username</p><hr><p>date: 2018-09-20 22:27:42<br>categories: “Github之路”</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一：向你的 Github Pages 仓库添加一个CNAME(一定要&lt;em&gt;大写&lt;/em&gt;)文件&lt;br&gt;其中只能包含一个顶级域名，像这样：&lt;a href=&quot;http://songluming.com&quot;&gt;http://songluming.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微笑面对</title>
    <link href="http://songluming.com/18842/"/>
    <id>http://songluming.com/18842/</id>
    <published>2018-09-19T07:08:20.055Z</published>
    <updated>2018-09-19T13:37:23.816Z</updated>
    
    <content type="html"><![CDATA[<p>生活中难免遇到许多我们无法预测的事<br>有的人选择逃避<br>有的人选择面对<br>二种选择都充满苦涩<br>请把苦涩与泪水留给夜里的自己<br>他催促我们成长</p><hr><h2 id="第一篇博客不谈学业"><a href="#第一篇博客不谈学业" class="headerlink" title="第一篇博客不谈学业"></a>第一篇博客不谈学业</h2><p>date: 2018-09-19 21:32:20</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;生活中难免遇到许多我们无法预测的事&lt;br&gt;有的人选择逃避&lt;br&gt;有的人选择面对&lt;br&gt;二种选择都充满苦涩&lt;br&gt;请把苦涩与泪水留给夜里的自己&lt;br&gt;他催促我们成长&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;第一篇博客不谈学业&quot;&gt;&lt;a href=&quot;#第一篇博客不谈学业&quot; class=
      
    
    </summary>
    
    
  </entry>
  
</feed>
